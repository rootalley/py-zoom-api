# coding: utf-8

"""
    Zoom API

    The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: developersupport@zoom.us
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from api.users_api import UsersApi  # noqa: E501
from swagger_client.rest import ApiException


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self):
        self.api = api.users_api.UsersApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_switch_user_account(self):
        """Test case for switch_user_account

        Switch a User's Account  # noqa: E501
        """
        pass

    def test_user(self):
        """Test case for user

        Get a User  # noqa: E501
        """
        pass

    def test_user_assistant_create(self):
        """Test case for user_assistant_create

        Add Assistants  # noqa: E501
        """
        pass

    def test_user_assistant_delete(self):
        """Test case for user_assistant_delete

        Delete a User Assistant  # noqa: E501
        """
        pass

    def test_user_assistants(self):
        """Test case for user_assistants

        List User Assistants  # noqa: E501
        """
        pass

    def test_user_assistants_delete(self):
        """Test case for user_assistants_delete

        Delete User Assistants  # noqa: E501
        """
        pass

    def test_user_create(self):
        """Test case for user_create

        Create Users  # noqa: E501
        """
        pass

    def test_user_delete(self):
        """Test case for user_delete

        Delete User  # noqa: E501
        """
        pass

    def test_user_email(self):
        """Test case for user_email

        Check a User Email  # noqa: E501
        """
        pass

    def test_user_email_update(self):
        """Test case for user_email_update

        Update a User's Email  # noqa: E501
        """
        pass

    def test_user_password(self):
        """Test case for user_password

        Update a User's Password  # noqa: E501
        """
        pass

    def test_user_permission(self):
        """Test case for user_permission

        Get User Permissions  # noqa: E501
        """
        pass

    def test_user_picture(self):
        """Test case for user_picture

        Upload a User's Profile Picture  # noqa: E501
        """
        pass

    def test_user_scheduler_delete(self):
        """Test case for user_scheduler_delete

        Delete a Scheduler  # noqa: E501
        """
        pass

    def test_user_schedulers(self):
        """Test case for user_schedulers

        List User Schedulers  # noqa: E501
        """
        pass

    def test_user_schedulers_delete(self):
        """Test case for user_schedulers_delete

        Delete User Schedulers  # noqa: E501
        """
        pass

    def test_user_settings(self):
        """Test case for user_settings

        Get User Settings  # noqa: E501
        """
        pass

    def test_user_settings_update(self):
        """Test case for user_settings_update

        Update User Settings  # noqa: E501
        """
        pass

    def test_user_sso_token_delete(self):
        """Test case for user_sso_token_delete

        Revoke a User's SSO Token  # noqa: E501
        """
        pass

    def test_user_status(self):
        """Test case for user_status

        Update User Status  # noqa: E501
        """
        pass

    def test_user_token(self):
        """Test case for user_token

        Get a User Token  # noqa: E501
        """
        pass

    def test_user_update(self):
        """Test case for user_update

        Update User  # noqa: E501
        """
        pass

    def test_user_vanity_name(self):
        """Test case for user_vanity_name

        Check a User's PM Room Name  # noqa: E501
        """
        pass

    def test_users(self):
        """Test case for users

        List Users  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
