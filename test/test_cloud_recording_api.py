# coding: utf-8

"""
    Zoom API

    The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: developersupport@zoom.us
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from api.cloud_recording_api import CloudRecordingApi  # noqa: E501
from swagger_client.rest import ApiException


class TestCloudRecordingApi(unittest.TestCase):
    """CloudRecordingApi unit test stubs"""

    def setUp(self):
        self.api = api.cloud_recording_api.CloudRecordingApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_get_account_cloud_recording(self):
        """Test case for get_account_cloud_recording

        List Recordings of an Account  # noqa: E501
        """
        pass

    def test_meeting_recording_registrant_create(self):
        """Test case for meeting_recording_registrant_create

        Create a Recording Registrant  # noqa: E501
        """
        pass

    def test_meeting_recording_registrant_status(self):
        """Test case for meeting_recording_registrant_status

        Update Recording Registrant's Status  # noqa: E501
        """
        pass

    def test_meeting_recording_registrants(self):
        """Test case for meeting_recording_registrants

        List Recording Registrants  # noqa: E501
        """
        pass

    def test_recording_delete(self):
        """Test case for recording_delete

        Delete Meeting Recordings  # noqa: E501
        """
        pass

    def test_recording_delete_one(self):
        """Test case for recording_delete_one

        Delete a Meeting Recording File  # noqa: E501
        """
        pass

    def test_recording_get(self):
        """Test case for recording_get

        Get Meeting Recordings  # noqa: E501
        """
        pass

    def test_recording_registrant_question_update(self):
        """Test case for recording_registrant_question_update

        Update Registration Questions  # noqa: E501
        """
        pass

    def test_recording_registrants_questions_get(self):
        """Test case for recording_registrants_questions_get

        Get Registration Questions  # noqa: E501
        """
        pass

    def test_recording_setting_update(self):
        """Test case for recording_setting_update

        Get Meeting Recording Settings  # noqa: E501
        """
        pass

    def test_recording_settings_update(self):
        """Test case for recording_settings_update

        Update Meeting Recording Settings  # noqa: E501
        """
        pass

    def test_recording_status_update(self):
        """Test case for recording_status_update

        Recover Meeting Recordings  # noqa: E501
        """
        pass

    def test_recording_status_update_one(self):
        """Test case for recording_status_update_one

        Recover a Single Recording  # noqa: E501
        """
        pass

    def test_recordings_list(self):
        """Test case for recordings_list

        List All Recordings  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
