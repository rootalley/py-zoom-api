# coding: utf-8

"""
    Zoom API

    The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: developersupport@zoom.us
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class QOSParticipantListUserQos(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'date_time': 'datetime',
        'audio_input': 'QOSObject',
        'audio_output': 'QOSObject',
        'video_input': 'AllOfQOSParticipantListUserQosVideoInput',
        'video_output': 'AllOfQOSParticipantListUserQosVideoOutput',
        'as_input': 'AllOfQOSParticipantListUserQosAsInput',
        'as_output': 'AllOfQOSParticipantListUserQosAsOutput',
        'cpu_usage': 'QOSParticipantListCpuUsage'
    }

    attribute_map = {
        'date_time': 'date_time',
        'audio_input': 'audio_input',
        'audio_output': 'audio_output',
        'video_input': 'video_input',
        'video_output': 'video_output',
        'as_input': 'as_input',
        'as_output': 'as_output',
        'cpu_usage': 'cpu_usage'
    }

    def __init__(self, date_time=None, audio_input=None, audio_output=None, video_input=None, video_output=None, as_input=None, as_output=None, cpu_usage=None):  # noqa: E501
        """QOSParticipantListUserQos - a model defined in Swagger"""  # noqa: E501
        self._date_time = None
        self._audio_input = None
        self._audio_output = None
        self._video_input = None
        self._video_output = None
        self._as_input = None
        self._as_output = None
        self._cpu_usage = None
        self.discriminator = None
        if date_time is not None:
            self.date_time = date_time
        if audio_input is not None:
            self.audio_input = audio_input
        if audio_output is not None:
            self.audio_output = audio_output
        if video_input is not None:
            self.video_input = video_input
        if video_output is not None:
            self.video_output = video_output
        if as_input is not None:
            self.as_input = as_input
        if as_output is not None:
            self.as_output = as_output
        if cpu_usage is not None:
            self.cpu_usage = cpu_usage

    @property
    def date_time(self):
        """Gets the date_time of this QOSParticipantListUserQos.  # noqa: E501

        Date-time of QOS  # noqa: E501

        :return: The date_time of this QOSParticipantListUserQos.  # noqa: E501
        :rtype: datetime
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time):
        """Sets the date_time of this QOSParticipantListUserQos.

        Date-time of QOS  # noqa: E501

        :param date_time: The date_time of this QOSParticipantListUserQos.  # noqa: E501
        :type: datetime
        """

        self._date_time = date_time

    @property
    def audio_input(self):
        """Gets the audio_input of this QOSParticipantListUserQos.  # noqa: E501


        :return: The audio_input of this QOSParticipantListUserQos.  # noqa: E501
        :rtype: QOSObject
        """
        return self._audio_input

    @audio_input.setter
    def audio_input(self, audio_input):
        """Sets the audio_input of this QOSParticipantListUserQos.


        :param audio_input: The audio_input of this QOSParticipantListUserQos.  # noqa: E501
        :type: QOSObject
        """

        self._audio_input = audio_input

    @property
    def audio_output(self):
        """Gets the audio_output of this QOSParticipantListUserQos.  # noqa: E501


        :return: The audio_output of this QOSParticipantListUserQos.  # noqa: E501
        :rtype: QOSObject
        """
        return self._audio_output

    @audio_output.setter
    def audio_output(self, audio_output):
        """Sets the audio_output of this QOSParticipantListUserQos.


        :param audio_output: The audio_output of this QOSParticipantListUserQos.  # noqa: E501
        :type: QOSObject
        """

        self._audio_output = audio_output

    @property
    def video_input(self):
        """Gets the video_input of this QOSParticipantListUserQos.  # noqa: E501

        Quality of service object.  # noqa: E501

        :return: The video_input of this QOSParticipantListUserQos.  # noqa: E501
        :rtype: AllOfQOSParticipantListUserQosVideoInput
        """
        return self._video_input

    @video_input.setter
    def video_input(self, video_input):
        """Sets the video_input of this QOSParticipantListUserQos.

        Quality of service object.  # noqa: E501

        :param video_input: The video_input of this QOSParticipantListUserQos.  # noqa: E501
        :type: AllOfQOSParticipantListUserQosVideoInput
        """

        self._video_input = video_input

    @property
    def video_output(self):
        """Gets the video_output of this QOSParticipantListUserQos.  # noqa: E501

        Quality of service object.  # noqa: E501

        :return: The video_output of this QOSParticipantListUserQos.  # noqa: E501
        :rtype: AllOfQOSParticipantListUserQosVideoOutput
        """
        return self._video_output

    @video_output.setter
    def video_output(self, video_output):
        """Sets the video_output of this QOSParticipantListUserQos.

        Quality of service object.  # noqa: E501

        :param video_output: The video_output of this QOSParticipantListUserQos.  # noqa: E501
        :type: AllOfQOSParticipantListUserQosVideoOutput
        """

        self._video_output = video_output

    @property
    def as_input(self):
        """Gets the as_input of this QOSParticipantListUserQos.  # noqa: E501

        Quality of service object.  # noqa: E501

        :return: The as_input of this QOSParticipantListUserQos.  # noqa: E501
        :rtype: AllOfQOSParticipantListUserQosAsInput
        """
        return self._as_input

    @as_input.setter
    def as_input(self, as_input):
        """Sets the as_input of this QOSParticipantListUserQos.

        Quality of service object.  # noqa: E501

        :param as_input: The as_input of this QOSParticipantListUserQos.  # noqa: E501
        :type: AllOfQOSParticipantListUserQosAsInput
        """

        self._as_input = as_input

    @property
    def as_output(self):
        """Gets the as_output of this QOSParticipantListUserQos.  # noqa: E501

        Quality of service object.  # noqa: E501

        :return: The as_output of this QOSParticipantListUserQos.  # noqa: E501
        :rtype: AllOfQOSParticipantListUserQosAsOutput
        """
        return self._as_output

    @as_output.setter
    def as_output(self, as_output):
        """Sets the as_output of this QOSParticipantListUserQos.

        Quality of service object.  # noqa: E501

        :param as_output: The as_output of this QOSParticipantListUserQos.  # noqa: E501
        :type: AllOfQOSParticipantListUserQosAsOutput
        """

        self._as_output = as_output

    @property
    def cpu_usage(self):
        """Gets the cpu_usage of this QOSParticipantListUserQos.  # noqa: E501


        :return: The cpu_usage of this QOSParticipantListUserQos.  # noqa: E501
        :rtype: QOSParticipantListCpuUsage
        """
        return self._cpu_usage

    @cpu_usage.setter
    def cpu_usage(self, cpu_usage):
        """Sets the cpu_usage of this QOSParticipantListUserQos.


        :param cpu_usage: The cpu_usage of this QOSParticipantListUserQos.  # noqa: E501
        :type: QOSParticipantListCpuUsage
        """

        self._cpu_usage = cpu_usage

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QOSParticipantListUserQos, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QOSParticipantListUserQos):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
