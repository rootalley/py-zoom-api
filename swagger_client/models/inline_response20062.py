# coding: utf-8

"""
    Zoom API

    The Zoom API allows developers to safely and securely access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials). All endpoints are available via `https` and are located at `api.zoom.us/v2/`.  For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.  # noqa: E501

    OpenAPI spec version: 2.0.0
    Contact: developersupport@zoom.us
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class InlineResponse20062(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'outbound_caller': 'InlineResponse20062OutboundCaller',
        'area_code': 'str',
        'company_number': 'str'
    }

    attribute_map = {
        'outbound_caller': 'outbound_caller',
        'area_code': 'area_code',
        'company_number': 'company_number'
    }

    def __init__(self, outbound_caller=None, area_code=None, company_number=None):  # noqa: E501
        """InlineResponse20062 - a model defined in Swagger"""  # noqa: E501
        self._outbound_caller = None
        self._area_code = None
        self._company_number = None
        self.discriminator = None
        if outbound_caller is not None:
            self.outbound_caller = outbound_caller
        if area_code is not None:
            self.area_code = area_code
        if company_number is not None:
            self.company_number = company_number

    @property
    def outbound_caller(self):
        """Gets the outbound_caller of this InlineResponse20062.  # noqa: E501


        :return: The outbound_caller of this InlineResponse20062.  # noqa: E501
        :rtype: InlineResponse20062OutboundCaller
        """
        return self._outbound_caller

    @outbound_caller.setter
    def outbound_caller(self, outbound_caller):
        """Sets the outbound_caller of this InlineResponse20062.


        :param outbound_caller: The outbound_caller of this InlineResponse20062.  # noqa: E501
        :type: InlineResponse20062OutboundCaller
        """

        self._outbound_caller = outbound_caller

    @property
    def area_code(self):
        """Gets the area_code of this InlineResponse20062.  # noqa: E501

        Area Code of User  # noqa: E501

        :return: The area_code of this InlineResponse20062.  # noqa: E501
        :rtype: str
        """
        return self._area_code

    @area_code.setter
    def area_code(self, area_code):
        """Sets the area_code of this InlineResponse20062.

        Area Code of User  # noqa: E501

        :param area_code: The area_code of this InlineResponse20062.  # noqa: E501
        :type: str
        """

        self._area_code = area_code

    @property
    def company_number(self):
        """Gets the company_number of this InlineResponse20062.  # noqa: E501

        The [company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user's extension). It can also be used by phone users as their caller ID when making calls.  # noqa: E501

        :return: The company_number of this InlineResponse20062.  # noqa: E501
        :rtype: str
        """
        return self._company_number

    @company_number.setter
    def company_number(self, company_number):
        """Sets the company_number of this InlineResponse20062.

        The [company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user's extension). It can also be used by phone users as their caller ID when making calls.  # noqa: E501

        :param company_number: The company_number of this InlineResponse20062.  # noqa: E501
        :type: str
        """

        self._company_number = company_number

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20062, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20062):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
